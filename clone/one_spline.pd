#N canvas 547 209 849 567 12;
#N canvas 522 197 518 612 pointlist 0;
#X obj 20 110 fc_vector 0 0 0;
#X obj 40 201 list append;
#X obj 90 311 list append;
#X obj 110 161 fc_vector 0 10 0;
#X obj 280 360 list append;
#X obj 220 10 inlet;
#X obj 280 420 outlet;
#X obj 280 389 list prepend list 4;
#X obj 160 281 fc_vector 5 20 0;
#X obj 350 330 fc_vector 0 20 0;
#X obj 160 220 random 50;
#X obj 160 250 / 10;
#X obj 240 190 random 50;
#X obj 240 220 / 10;
#X obj 240 249 + 15;
#X obj 220 40 t b b b b b;
#X text 360 40 3 static point : (0 \, 0 \, 0) \, (0 \, 10 \, 0) and
(0 \, 20 \, 0);
#X text 360 70 and 1 random : (0<?<5 \, 15<?<20 \, 0);
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 1 1;
#X connect 4 0 7 0;
#X connect 5 0 15 0;
#X connect 7 0 6 0;
#X connect 8 0 2 1;
#X connect 9 0 4 1;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 8 1;
#X connect 15 0 0 0;
#X connect 15 1 3 0;
#X connect 15 2 10 0;
#X connect 15 3 12 0;
#X connect 15 4 9 0;
#X restore 30 220 pd pointlist;
#X obj 180 300 fc_vector 0 0 0;
#X obj 300 300 fc_rotation 0 0 0;
#X obj 180 329 fc_placement;
#X msg 130 260 False;
#X obj 20 40 inlet;
#X obj 280 141 float \$1;
#X obj 280 170 * 10;
#X obj 20 80 t b b b b b;
#X obj 30 390 outlet;
#X obj 30 360 draft/make_bspline;
#X text 350 140 arg \$1 is the clone index;
#X text 350 170 z=10*clone_index;
#X text 180 260 do not close the bspline;
#X text 130 220 this sub-patch create the point list;
#X text 280 100 compute this first \; so value is available when fc_vector
get bang;
#X text 90 390 return the spline object;
#X text 110 80 left to rightâ€¦;
#X connect 0 0 10 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 10 2;
#X connect 4 0 10 1;
#X connect 5 0 8 0;
#X connect 6 0 7 0;
#X connect 7 0 1 2;
#X connect 8 0 0 0;
#X connect 8 1 4 0;
#X connect 8 2 1 0;
#X connect 8 3 2 0;
#X connect 8 4 6 0;
#X connect 10 0 9 0;
